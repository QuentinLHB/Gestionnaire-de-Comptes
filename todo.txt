- Changer une répartition d'un budget doit recalculer le compte associé et donc le total.

- optimiser updateTotaux() car refait tout le calcul à chaque fois

- Gérer le ping pong des selectedindex des listes (tester avec le bouton edit)

- Remplacer le tostring() de compte par une fonction à part entière

- quand le message d'erreur de saisie apparaît, la sélection passe au suivant à tort

- Rendre l'application responsive

- Permettre le minimize

-Quand on édite, on ne peut pas changer de control OU si on change de ctrl, l'edit saute

- Corriger bug sur FenRepartition : crash si rien n'est entré (pb de parse)

- Créer un paramètre sauvegarde auto
- Créer un paramètre chargement M ou M-1

- Permettre d'éditer ou de supprimer une save

- Si la save est vierge de budget, l'app crash si on essaie de charger

- Changer les virgules en point dans la saisie des chiffres, enlever les espaces avant après??

- Dépenses totales d'un mois

- Permettre l'analyse :
ex : une save avec A B C trois noms de budgets
une deuxième save avec A B D trois noms de budgets
List<> list
# Une boucle vérifie si A est identique à un des items de la liste, si non en fin de boucle :
# Ajout de A à la liste
# boucle qui réitère pour les items de chaque save
# On a une liste avec ABCD

Moyenne de dépenses de chaque budget :

Tableau doit ressembler à :
BUDGET | DEPENSE MOYENNE | DEPENSE DU MOIS | EVOLUTION
Donc créer une classe qui a ces membres et peut calculer les éléments nécessaires.

On créera ainsi une liste d'objets de cette classe, qui seront affichés dans la gridview.

Récupérer toutes les saves

Créer une liste vide sortedBudgets

pour chaque budget de chaque save
Vérifier si le nom du budget existe déjà dans sortedBudgets
Oui : Ajouter les dépenses du mois au budget
Non : Ajouter le budget et la dépense


